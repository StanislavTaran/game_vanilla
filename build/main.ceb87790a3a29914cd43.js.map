{"version":3,"sources":["webpack:///./index.js"],"names":["intervalId","refs","startButtonElem","document","getElementById","newGameButtonElem","scoreListElem","squaresListElem","timerValueElem","scoreValueElem","formScoreElem","resultFormElem","modalElem","GAME_STATUS","activeSquareClasses","BLUE","GREEN","RED","animationClasses","gameState","gameStatus","timerValue","scoreValue","squaresIdList","getRandomNumbers","scoreList","JSON","parse","localStorage","getItem","name","score","activeClassesList","Object","values","setActiveClassForElem","elem","randomIdx","length","classList","add","resetActiveClassForElem","contains","remove","setActiveClassForElements","IdList","parentRef","item","children","toString","max","quantity","Math","floor","random","arrOfNumbers","i","number","indexOf","push","getUniqNumber","primaryList","additionalList","uniqNumber","getUniqNumbersList","withoutZero","randomQuantity","arrOfUniqNumbers","randomNumber","updateTimerInterface","value","sec","minutes","seconds","innerHTML","trunc","updateScoreInterface","addEventListener","map","prevStatusGame","setInterval","newRandomNumbers","clearInterval","resetActiveClassForElements","e","elemId","target","id","isSquareActive","Number","setTimeout","filter","preventDefault","nameTargetValue","data","pop","sort","a","b","setItem","stringify"],"mappings":"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","file":"main.ceb87790a3a29914cd43.js","sourcesContent":["import './styles.css';\n\n// REFs\nconst refs = {\n  startButtonElem: document.getElementById('start-button'),\n  newGameButtonElem: document.getElementById('reset-button'),\n  scoreListElem: document.getElementById('score-list'),\n  squaresListElem: document.getElementById('squares-list'),\n  timerValueElem: document.getElementById('time'),\n  scoreValueElem: document.getElementById('score'),\n  formScoreElem: document.getElementById('form-score'),\n  resultFormElem: document.getElementById('result-form'),\n  modalElem: document.getElementById('modal'),\n};\n\n//CONSTANTS\nconst SQUARES_QTY = 70;\nconst INITIAL_TIMER_VALUE = 60;\nconst SQUARES_QTY_ON_FIELD = 5;\n\nconst GAME_STATUS = {\n  PENDING: 'pending',\n  GAME_OVER: 'over',\n  GAME_ON: 'on',\n  PAUSE: 'pause',\n};\n\nconst defaultScoreList = [\n  { name: 'Unknown', score: 120 },\n  { name: 'John Doe', score: 113 },\n  { name: 'Black_Fox', score: 111 },\n];\n\nconst activeSquareClasses = {\n  BLUE: 'square-blue',\n  GREEN: 'square-green',\n  RED: 'square-red',\n};\n\nconst animationClasses = {\n  onSquareleft: 'hinge',\n};\n\nconst defaultUserName = 'Unknown';\nconst lSKey = 'score_list';\n\n// GAME STATE\nconst gameState = {\n  gameStatus: GAME_STATUS.PENDING,\n  timerValue: INITIAL_TIMER_VALUE,\n  scoreValue: 0,\n  squaresIdList: getRandomNumbers(SQUARES_QTY, SQUARES_QTY_ON_FIELD),\n  scoreList: JSON.parse(localStorage.getItem(lSKey)) || defaultScoreList,\n};\n\nlet intervalId;\n\n//HELPERS\nfunction formattedTimeValue(sec) {\n  const minutes = Math.trunc(sec / 60);\n  const seconds = sec - minutes * 60;\n  return `0${minutes} : ${seconds > 9 ? seconds : '0' + seconds}`;\n}\n\nconst activeClassesList = Object.values(activeSquareClasses);\n\nfunction setActiveClassForElem(elem) {\n  const randomIdx = getRandomNumbers(activeClassesList.length);\n  return elem.classList.add(activeClassesList[randomIdx]);\n}\n\nfunction resetActiveClassForElem(elem) {\n  switch (true) {\n    case elem.classList.contains(activeSquareClasses.GREEN):\n      elem.classList.remove(activeSquareClasses.GREEN);\n      break;\n    case elem.classList.contains(activeSquareClasses.BLUE):\n      elem.classList.remove(activeSquareClasses.BLUE);\n      break;\n    case elem.classList.contains(activeSquareClasses.RED):\n      elem.classList.remove(activeSquareClasses.RED);\n      break;\n    default:\n      return;\n  }\n}\n\nfunction setActiveClassForElements(IdList, parentRef) {\n  for (let item of IdList) {\n    const elem = parentRef.children[item.toString()];\n    setActiveClassForElem(elem);\n  }\n}\n\nfunction resetActiveClassForElements(IdList, parentRef) {\n  for (let item of IdList) {\n    const elem = parentRef.children[item.toString()];\n    resetActiveClassForElem(elem);\n  }\n}\n\nfunction getRandomNumbers(max, quantity = 1) {\n  if (quantity === 1) {\n    return Math.floor(Math.random() * Math.floor(max));\n  } else if (quantity > 1) {\n    const arrOfNumbers = [];\n    for (let i = 0; i < quantity; i++) {\n      const number = getRandomNumbers(max);\n      if (arrOfNumbers.indexOf(number) > -1) continue;\n      arrOfNumbers.push(number);\n    }\n    return arrOfNumbers;\n  } else return;\n}\n\nfunction getUniqNumber(primaryList, additionalList = []) {\n  let uniqNumber = getRandomNumbers(SQUARES_QTY, 1);\n  if (additionalList.length) {\n    if (additionalList.indexOf(uniqNumber) > -1) {\n      uniqNumber = getUniqNumber(primaryList, additionalList);\n    }\n  }\n  if (primaryList.indexOf(uniqNumber) === -1 && uniqNumber !== 0) {\n    return uniqNumber;\n  } else return getUniqNumber(primaryList, additionalList);\n}\n\nfunction getUniqNumbersList(primaryList, withoutZero = false) {\n  const randomQuantity = getRandomNumbers(3, 1);\n  if (withoutZero && randomQuantity === 0) {\n    return getUniqNumbersList(primaryList, withoutZero);\n  }\n  if (randomQuantity === 0) {\n    return [];\n  } else {\n    const arrOfUniqNumbers = [];\n    for (let i = 0; i < randomQuantity; i++) {\n      let randomNumber = getUniqNumber(primaryList, arrOfUniqNumbers);\n\n      arrOfUniqNumbers.push(randomNumber);\n    }\n    return arrOfUniqNumbers;\n  }\n}\n\n// INTERFACE UPDATERS\nfunction updateTimerInterface(value) {\n  refs.timerValueElem.innerHTML = formattedTimeValue(value);\n}\nfunction updateScoreInterface(value) {\n  refs.scoreValueElem.innerHTML = value;\n}\n\n// LOGIC & EVENT HANDLERS\nconst handleSetTimerValue = () => {\n  gameState.timerValue -= 1;\n};\n\nconst handleStartGame = () => {\n  if (gameState.gameStatus === GAME_STATUS.GAME_OVER) return;\n  if (\n    gameState.timerValue === INITIAL_TIMER_VALUE ||\n    gameState.gameStatus === GAME_STATUS.PAUSE\n  ) {\n    const prevStatusGame = gameState.gameStatus;\n    gameState.gameStatus = GAME_STATUS.GAME_ON;\n    intervalId = setInterval(() => {\n      handleSetTimerValue();\n      updateTimerInterface(gameState.timerValue);\n      if (gameState.squaresIdList.length <= 1) {\n        const newRandomNumbers = getUniqNumbersList(gameState.squaresIdList);\n        gameState.squaresIdList.push(...newRandomNumbers);\n        setActiveClassForElements(newRandomNumbers, refs.squaresListElem);\n      }\n      if (gameState.timerValue === 0) {\n        gameState.gameStatus = GAME_STATUS.GAME_OVER;\n        clearInterval(intervalId);\n        refs.formScoreElem.innerHTML = gameState.scoreValue;\n        refs.modalElem.classList.remove('modal-closed');\n      }\n    }, 1000);\n    if (prevStatusGame === GAME_STATUS.PENDING) {\n      setActiveClassForElements(gameState.squaresIdList, refs.squaresListElem);\n    }\n  } else {\n    gameState.gameStatus = GAME_STATUS.PAUSE;\n  }\n};\n\nconst handleStartNewGame = () => {\n  if (gameState.timerValue === INITIAL_TIMER_VALUE) return;\n  if (gameState.timerValue !== 0) {\n    clearInterval(intervalId);\n  }\n  gameState.gameStatus = GAME_STATUS.PENDING;\n  gameState.scoreValue = 0;\n  updateScoreInterface(gameState.scoreValue);\n  gameState.timerValue = INITIAL_TIMER_VALUE;\n  updateTimerInterface(gameState.timerValue);\n  resetActiveClassForElements(gameState.squaresIdList, refs.squaresListElem);\n  gameState.squaresIdList = getRandomNumbers(SQUARES_QTY, SQUARES_QTY_ON_FIELD);\n};\n\nconst handleClickOnSquare = e => {\n  const elemId = e.target.id;\n  const isSquareActive = gameState.squaresIdList.indexOf(Number(elemId)) > -1;\n  if (gameState.gameStatus === GAME_STATUS.GAME_ON && isSquareActive) {\n    gameState.scoreValue += 1;\n    updateScoreInterface(gameState.scoreValue);\n    const newRandomNumbers = getUniqNumbersList(gameState.squaresIdList);\n    e.target.classList.add(animationClasses.onSquareleft);\n    setTimeout(() => {\n      resetActiveClassForElem(e.target);\n      e.target.classList.remove(animationClasses.onSquareleft);\n    }, 1000);\n\n    gameState.squaresIdList = [\n      ...gameState.squaresIdList.filter(item => item !== Number(elemId)),\n    ];\n    if (newRandomNumbers.length) {\n      gameState.squaresIdList.push(...newRandomNumbers);\n      setActiveClassForElements(newRandomNumbers, refs.squaresListElem);\n    }\n  }\n};\n\nconst handleSubmitResultForm = e => {\n  e.preventDefault();\n  const nameTargetValue = e.target[0].value;\n  const data = {\n    name: nameTargetValue.length ? nameTargetValue : defaultUserName,\n    score: gameState.scoreValue,\n  };\n  if (gameState.scoreList.length >= 10) {\n    gameState.scoreList.pop();\n  }\n  gameState.scoreList.push(data);\n  gameState.scoreList.sort((a, b) => b.score - a.score);\n  localStorage.setItem(lSKey, JSON.stringify(gameState.scoreList));\n  refs.scoreListElem.innerHTML = gameState.scoreList.map(\n    item => `<li class='score-table__item'>${item.name} : ${item.score}</li>`,\n  );\n  refs.modalElem.classList.add('modal-closed');\n};\n\n// EVENT LISTENERS\ndocument.addEventListener('DOMContentLoaded', () => {\n  refs.scoreListElem.innerHTML = gameState.scoreList.map(\n    item => `<li class='score-table__item'>${item.name} : ${item.score}</li>`,\n  );\n});\nrefs.startButtonElem.addEventListener('click', handleStartGame);\nrefs.newGameButtonElem.addEventListener('click', handleStartNewGame);\nrefs.squaresListElem.addEventListener('click', handleClickOnSquare);\nrefs.resultFormElem.addEventListener('submit', handleSubmitResultForm);\n"],"sourceRoot":""}